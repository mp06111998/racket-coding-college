(define stevec 0)
(define stevec_all 0)

(displayln "---- Testi za podatkovne tipe ----")
(display "Test1: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (zz 2) null) (zz 2))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test2: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (qq (zz 2) (zz 8)) null) (qq (zz 1) (zz 4)))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test3: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (.. (zz 42) (.. (qq (zz 3) (zz 30)) (empty))) null) (.. (zz 42) (.. (qq (zz 1) (zz 10)) (empty))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test4: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (s (set (zz 1) (zz 2) (zz 3) (zz 3) (zz 2))) null) (s (set (zz 1) (zz 2) (zz 3))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test5: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (true) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test6: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (s (set (add (zz 2) (zz 3)) (qq (zz 2) (zz 6)) (zz 5))) null) (s (set (zz 5) (qq (zz 1) (zz 3)))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test7: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (false) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test8: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (.. (qq (zz 2) (zz 4)) (empty)) null) (.. (qq (zz 1) (zz 2)) (empty)))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(displayln "")
(displayln "---- Testi za nadzor toka ----")
(display "Test1: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (if-then-else (add (false) (false)) (add (zz 5) (qq (zz 3) (zz 5))) (zz 28)) null) (zz 28))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test2: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (if-then-else (mul (true) (true)) (add (zz 5) (qq (zz 3) (zz 5))) (zz 28)) null) (qq (zz 28) (zz 5)))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test3: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (is-zz? (mul (zz 2) (zz 4))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test4: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (is-qq? (add (zz 5) (qq (zz 2) (zz 3)))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test5: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (is-bool? (leq? (s (set (zz 1) (zz 2) (zz 3))) (s (set (add (zz 0) (zz 1)) (zz 3) (zz 4) (zz 2) (zz 28))))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test6: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (is-seq? (.. (zz 3) (.. (false) (.. (true) (zz 28))))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test7: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (is-proper-seq? (.. (zz 3) (.. (false) (.. (true) (zz 28))))) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test8: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (is-proper-seq? (.. (zz 3) (.. (false) (.. (true) (empty))))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test9: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (is-empty? (zz 3)) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test10: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (is-empty? (empty)) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test11: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (add (true) (false)) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test12: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (add (zz 8) (zz 3)) null) (zz 11))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test13: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (add (qq (zz 3) (zz 8)) (qq (zz 17) (zz 27))) null) (qq (zz 217) (zz 216)))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test14: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (add (.. (zz 3) (.. (zz 4) (.. (zz 5) (empty)))) (.. (zz 6) (.. (zz 7) (empty)))) null) (.. (zz 3) (.. (zz 4) (.. (zz 5) (.. (zz 6) (.. (zz 7) (empty)))))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test15: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (add (empty) (empty)) null) (empty))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test16: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (add (s (set (zz 1) (zz 1) (zz 1) (zz 2))) (s (set (zz 2) (zz 3)))) null) (s (set (zz 1) (zz 2) (zz 3))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test17: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (mul (true) (false)) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test18: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (mul (zz 3) (zz 28)) null) (zz 84))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test19: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (mul (qq (zz 3) (zz 8)) (qq (zz 12) (zz 6))) null) (qq (zz 3) (zz 4)))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test20: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (mul (s (set (true) (false) (zz 3))) (s (set (zz 4) (zz 4)))) null) (s (set (.. (true) (zz 4)) (.. (false) (zz 4)) (.. (zz 3) (zz 4)))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test21: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (leq? (true) (false)) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test22: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (leq? (zz 3) (qq (zz 26) (zz 9))) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test23: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (leq? (.. (zz 2) (.. (zz 3) (empty))) (.. (zz 12) (.. (zz 13) (.. (true) (empty))))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test24: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (leq? (s (set (zz 1) (zz 4) (zz 1) (zz 1))) (s (set (zz 1) (zz 2) (zz 3) (zz 4) (zz 5)))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test25: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (rounding (zz 3)) null) (zz 3))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test26: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (rounding (qq (zz 7) (zz 3))) null) (zz 2))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test27: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (rounding (qq (zz 15) (zz 10))) null) (zz 2))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test28: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (=? (zz 3) (qq (zz 9) (zz 3))) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test29: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (=? (zz 4) (rounding (qq (zz 15) (zz 4)))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test30: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (qq (left (qq (zz 3) (zz 15))) (right (qq (zz 3) (zz 15)))) null) (qq (zz 1) (zz 5)))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test31: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (.. (left (.. (zz 3) (.. (zz 4) (.. (zz 5) (empty))))) (right (.. (zz 3) (.. (zz 4) (.. (zz 5) (empty)))))) null) (.. (zz 3) (.. (zz 4) (.. (zz 5) (empty)))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test32: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (.. (left (s (set (zz 1) (zz 2) (zz 4)))) (right (s (set (zz 1) (zz 2) (zz 4))))) null) (.. (zz 1) (s (set (zz 2) (zz 4)))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test33: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (s (set (~ (zz 5)) (~ (qq (zz 3) (zz 7))) (~ (true)) (zz -5))) null) (s (set (zz -5) (qq (zz -3) (zz 7)) (false))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test34: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (all? (.. (zz 3) (.. (false) (.. (zz 28) (.. (zz 2) (empty)))))) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test35: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (all? (.. (zz 3) (.. (qq (zz 2) (zz 19)) (.. (zz 28) (.. (zz 2) (empty)))))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test36: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (any? (.. (false) (.. (false) (.. (false) (.. (false) (empty)))))) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test37: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (all? (s (set (zz 1) (zz 2) (zz 3)))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test38: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (all? (s (set (zz 1) (false) (zz 3)))) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test39: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (any? (s (set (zz 1) (false) (zz 3)))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test40: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (any? (s (set (add (false) (false)) (false) (mul (false) (false))))) null) (false))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(displayln "")
(displayln "---- Testi za okolje in spremenljivke ----")
(display "Test1: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars "a" (mul (zz 3) (zz 6)) (vars "b" (mul (zz 2) (valof "a")) (add (~ (valof "a")) (valof "b")))) null) (zz 18))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test2: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars "a" (add (zz 2) (qq (zz 3) (zz 4))) (vars "a" (add (zz 2) (~ (zz 2))) (mul (valof "a") (zz 23)))) null) (zz 0))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test3: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars 1 (mul (true) (false)) (add (true) (valof 1))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test4: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars "abc" (.. (true) (.. (zz 2) (.. (add (zz 3) (qq (zz 2) (zz 7))) (empty)))) (add (valof "abc") (valof "abc"))) null)
            (.. (true) (.. (zz 2) (.. (qq (zz 23) (zz 7)) (.. (true) (.. (zz 2) (.. (qq (zz 23) (zz 7)) (empty))))))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test5: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars 321 (s (set (zz 1) (zz 1) (zz 2))) (mul (valof 321) (valof 321))) null) (s (set (.. (zz 1) (zz 1)) (.. (zz 1) (zz 2)) (.. (zz 2) (zz 1)) (.. (zz 2) (zz 2)))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test6: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars (list "a" "b") (list (mul (qq (zz 1) (zz 2)) (qq (zz -3) (zz 4))) (~ (add (qq (zz 1) (zz 2)) (qq (zz -3) (zz 4))))) (add (valof "a") (valof "b"))) null) (qq (zz -1) (zz 8)))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test7: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars (list "s1" "s2" "s3")
                       (list (s (set (false) (true)))
                             (s (set (zz 1) (zz 2) (zz 3)))
                             (s (set (zz 4) (zz 4))))
                       (mul (valof "s1") (mul (valof "s2") (valof "s3")))) null)
            (s
             (set
              (.. (true) (.. (zz 1) (zz 4)))
              (.. (true) (.. (zz 3) (zz 4)))
              (.. (false) (.. (zz 2) (zz 4)))
              (.. (true) (.. (zz 2) (zz 4)))
              (.. (false) (.. (zz 1) (zz 4)))
              (.. (false) (.. (zz 3) (zz 4))))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test8: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars (list 1 2 3) (list (zz 1) (zz 2) (zz 3)) (vars 1 (zz 23) (add (valof 1) (add (valof 2) (valof 3))))) null) (zz 28))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test9: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars (list "a" "a" "a" "b") (list (qq (zz 23) (zz 16)) (qq (zz 2353) (zz 12341)) (zz 2) (qq (zz 30) (zz 15))) (leq? (valof "a") (valof "b"))) null) (true))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test10: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (vars (list "a" "b" "c" "b") (list (zz 23) (s (set (true) (false))) (zz 19) (zz 3)) (mul (add (~ (valof "c")) (valof "a")) (valof "b"))) null) (zz 12))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(displayln "")
(displayln "---- Testi za funkcije ----")
(display "Test1: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call (fun "test" (list "x") (add (zz 5) (valof "x"))) (list (zz 1))) null) (zz 6))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test2: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call
      (fun "fib" (list "n")
           (if-then-else (leq? (valof "n") (zz 2))
                         (zz 1)
                         (add (call (valof "fib")
                                    (list (add (valof "n") (zz -1))))
                              (call (valof "fib")
                                    (list (add (valof "n") (zz -2)))))))
      (list (zz 11))) null)
            (zz 89))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test3: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call
      (fun "factoriel" (list "n")
           (if-then-else (=? (valof "n") (zz 1))
                         (zz 1)
                         (mul (call (valof "factoriel")
                                    (list (add (valof "n") (zz -1))))
                              (valof "n"))))
      (list (zz 5))) null)
            (zz 120))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test4: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call (fun "sestej" (list "x" "y" "z") (add (valof "z") (add (valof "x") (add (valof "y") (valof "z"))))) (list (zz 1) (zz 3) (qq (zz 5) (zz 6)))) null) (qq (zz 17) (zz 3)))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test5: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call
                  (fun "naredi_seznam" (list "n")
                       (if-then-else (=? (valof "n") (zz 0))
                                     (empty)
                                     (.. (valof "n") (call (valof "naredi_seznam") (list (add (valof "n") (zz -1)))))))
                  (list (zz 5))) null)
            (.. (zz 5) (.. (zz 4) (.. (zz 3) (.. (zz 2) (.. (zz 1) (empty)))))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(displayln "")
(displayln "---- Testi za procedure ----")
(display "Test1: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call (proc "test" (add (zz 2) (zz 4))) '()) null) (zz 6))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test2: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call (proc "test" (add (zz 2) (call (proc "test2" (add (zz 3) (zz 5))) '()))) '()) null) (zz 10))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test3: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call (proc "test" (leq? (if-then-else (leq? (zz 3) (zz 4)) (qq (zz 5) (zz 8)) (qq (zz 3) (zz 13))) (call (proc "test2" (mul (zz 1) (qq (zz 1) (zz 100)))) null))) null) null) (false)) 
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test4: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call (proc "test" (add (.. (zz 1) (.. (zz 2) (empty))) (.. (zz 3) (.. (zz 4) (empty))))) null) null) (.. (zz 1) (.. (zz 2) (.. (zz 3) (.. (zz 4) (empty))))))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(display "Test5: ")
(set! stevec_all (+ stevec_all 1))
(if (equal? (fri (call (proc "test" (rounding (call (proc "test2" (mul (qq (zz 3) (zz 16)) (qq (zz 48) (zz 6)))) null))) null) null) (zz 2))
    (begin (displayln "TRUE") (set! stevec (+ stevec 1)))
    (displayln "FALSE"))

(displayln "")
(display "Stevilo pravilnih: ")
(display stevec)
(display "/")
(display stevec_all)